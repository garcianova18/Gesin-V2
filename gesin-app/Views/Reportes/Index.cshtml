@using Microsoft.AspNetCore.Identity
@model IEnumerable<gesin_app.ViewModel.ReportesView>
@using gesin_app.ViewModel;

@{

    Layout = null;
    ViewData["Title"] = "Index";



    List<Persona> mantenedorreparo = ViewBag.mantenedorreparo;

    List<Subsistema> subsistemas = ViewBag.subsistema;

    List<Estacion> estaciones = ViewBag.estaciones;


    List<Ubicacion> ubicaciones = ViewBag.ubicacion;

    List<string> mantenedornotificar = ViewBag.mantenedornotificar;

     List<Sistema> sistemas = ViewBag.sistema;

}


<html lang="es">


<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="icon" href="/img/icono_gestiondeaverias.png" />
    <link rel="stylesheet" href="/css/Spinner_inicial.css" />
     <link rel="stylesheet" href="/css/Spinner_tabla.css" />
      <link rel="stylesheet" href="~/css/Index.css"/>

    <script src="/js/Recuperar_style_usuarios.js"></script>

    <title>GestionAverias</title>

   

</head>

<body id="cuerpo" class="cuerpo">

<div id="spin_container">

         <div class="sk-chase">

                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>

             
        </div>


    </div>

    <div class=" container-fluid " id="container">


        <div class="row fila-primaria-padre ">


            <!-----area del menu-->
            <div class=" col-primaria col-primaria-filtro  col-12 ">


                <nav class="navbar navbar-expand-lg navbar-dark bg-dark">


                    <div class="container-fluid">

                        <button class="navbar-toggler " type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon "></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarNavDropdown">
                            <ul class="navbar-nav">



                                @if (User.IsInRole("administrador"))
                                {
                                    <li class="nav-item dropdown">

                                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fa-solid fa-circle-user icono"></i>
                                        </a>


                                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                            <li>


                                                @*Button trigger modal -*@

                                                <a class="dropdown-item" asp-action="Index" asp-controller="Estaciones">

                                                    <div class="d-flex align-items-center">
                                                        <i class="fas fa-solid fa-shop me-1 text-success"> </i><div>Estaciones</div>
                                                    </div>


                                                </a>

                                                <a class="dropdown-item" asp-action="Index" asp-controller="Personas">

                                                    <div class="d-flex align-items-center">
                                                        <i class="fa fa-solid fa-user  me-1 text-success"></i> <div>Personas</div>
                                                    </div>


                                                </a> 



                                            </li>
                                            <li><a class="dropdown-item" href="#">Another action</a></li>
                                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                                        </ul>

                                 </li>


                                }


                                <li class="nav-item  me-md-2 ">
                                    <input type="number" name="Ot" id="filtroOt" min="0" class="form-control form-control-sm mt-1
                                            " placeholder="OT" />
                                </li>
                                <li class="nav-item me-md-2  ">
                                    <input type="date" id="filtrofecha" class=" filtrofecha form-control form-control-sm mt-1" onchange="filtrar()" />
                                </li>
                                <li class="nav-item me-md-2">
                                    <select asp-items="@ViewBag.fitroestaciones" class="form-select form-select-sm mt-1"
                                            id="fitroestaciones" onchange="filtrar()"></select>
                                </li>
                                <li class="nav-item me-md-2 ">
                                    <select asp-items="@ViewBag.filtrosubsistema" class="form-select form-select-sm mt-1"
                                            id="filtrosubsistema" onchange="filtrar()"></select>
                                </li>
                                <li class="nav-item me-md-2 ">
                                    <select asp-items="@ViewBag.estadoOTs" class="form-select form-select-sm mt-1"
                                            id="filtroestadoot" onchange="filtrar()"></select>
                                </li>

                                <li class="nav-item me-md-2 ">
                                    <select asp-items="@ViewBag.fitrousuario" class="form-select form-select-sm mt-1"
                                            id="fitrousuario" onchange="filtrar()"></select>
                                </li>
                                <li class="nav-item  pt-1 d-flex ">
                                    <a href="#" id="limpiar" class="">
                                        <i class="fa-solid fa-brush limpiar pt-2 mx-3"></i>

                                    </a>

                                    <a asp-action="Logout" asp-controller="Acceso" >

                                        <i class="fas fa-regular fa-right-from-bracket salir pt-2 mx-3 "></i>
                                    </a>

                                </li>

                               

                                <li class="nav-item me-md-2  ">
                                    <div class="text-white d-none d-md-block" id="reloj" style="font-size:13px"></div>
                                </li>




                            </ul>
                        </div>
                    </div>
                </nav>


                <!-- Modal -->
                <div class="modal fade" id="Modal-agregar-estaciones" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Estaciones</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form id="formEstaciones" method="post">
                                <div class="modal-body">

                                    <label class="form-label">Nombre</label>
                                    <input id="estacionNombre" class="form-control" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                    <input type="submit" class="btn btn-primary" value="Agregar">
                                </div>
                            </form>

                        </div>
                    </div>
                </div>


            </div>


            <!---area de la tabla-->
            <div class=" col-primaria col-primaria-tabla col-12 " id="contenedor_tabla_spinner">

                <div id="contenedor_spinner">

                            
                    <div class="sk-circle">

                              <div class="sk-circle1 sk-child"></div>
                              <div class="sk-circle2 sk-child"></div>
                              <div class="sk-circle3 sk-child"></div>
                              <div class="sk-circle4 sk-child"></div>
                              <div class="sk-circle5 sk-child"></div>
                              <div class="sk-circle6 sk-child"></div>
                              <div class="sk-circle7 sk-child"></div>
                              <div class="sk-circle8 sk-child"></div>
                              <div class="sk-circle9 sk-child"></div>
                              <div class="sk-circle10 sk-child"></div>
                              <div class="sk-circle11 sk-child"></div>
                              <div class="sk-circle12 sk-child"></div>
                    </div>


                </div>


           

                    <table class="table table-sm table-hover table-bordered text-center align-middle " id="tabla">

                        <thead class="cabecera-tabla text-white text-center align-middle" style="font-size:14px" id="head_table">

                            <tr>
                                <th>#@ViewBag.conteo</th>
                                <th>@Html.DisplayNameFor(model => model.Ot)</th>
                                <th>@Html.DisplayNameFor(model => model.fechaaveriaGuardarMostrar)</th>
                                <th>@Html.DisplayNameFor(model => model.SistemasNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.SubsistemasNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.EstacionesNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.Ubicacion)</th>
                                <th><div class="Columna-descripcion">@Html.DisplayNameFor(model => model.Descripcion)</div></th>
                                <th>@Html.DisplayNameFor(model => model.SmNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.CriticidadNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.EstadoOtNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.MantenedorNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.OperadorReporte)</th>
                                <th>@Html.DisplayNameFor(model => model.CodigoOperadorReporte)</th>
                                <th>@Html.DisplayNameFor(model => model.Fechanotificacion)</th>
                                <th>@Html.DisplayNameFor(model => model.MantenedorNotificar)</th>
                                @*<th>@Html.DisplayNameFor(model => model.MantenedorNotificarCodigo)</th>*@
                                <th>@Html.DisplayNameFor(model => model.Fechainicioguardarmostrar)</th>
                                <th>@Html.DisplayNameFor(model => model.MantenedorReparo)</th>
                                @*<th>@Html.DisplayNameFor(model => model.MantenedorReparoCodigo)</th>*@
                                <th>@Html.DisplayNameFor(model => model.OperadorCierre)</th>
                                <th>@Html.DisplayNameFor(model => model.CodigoOperadorCierre)</th>
                                <th>@Html.DisplayNameFor(model => model.Fechafinalguardarmostrar)</th>
                                <th>@Html.DisplayNameFor(model => model.Comentario)</th>
                                <th>@Html.DisplayNameFor(model => model.UsuariosCodigo)</th>
                                <th>@Html.DisplayNameFor(model => model.UsuariosNombre)</th>
                                <th>Usuario actualizo</th>




                            </tr>
                        </thead>

                        <tbody id="Pintardata">

                          
                            <!--El HTML y la data se pinta aqu con javascript-->

                        </tbody>


                    </table>

             

               



            </div>


            <!-----------area del formuilario--------------->
            <form id="formulario" method="post" class="g-0">


                <div class=" col-primaria col-primaria-reportes col-12 " id="area_averias">

                    <div class="row fila-secundaria " id="divPadre">

                        <!------Registro de averias------>

                        <div class="col-secundaria col-sm-4  col-md-4 border-end border-white border-2 ">


                            <div class="row reporte-averia gx-2 ms-md-3 me-md-2  mx-3 mx-md-0 d-flex justify-content- ">


                                <div class=" col-12 pb-3 pt-2 text-white">
                                    Registro de Averias


                                </div>
                                 

                                       <input id="idreportes" class="form-control form-control-sm" hidden readonly="readonly"   >
                                

                                

                                   <div class="col-12 col-md-6 mb-3">


                                 
                                        <input class=" sistema form-control form-control-sm campos_obligatorios " name="Id" list="Listsistemas" id="sistemas" placeholder="Sistemas">

                                        <datalist id="Listsistemas">
                                            @foreach (var item in sistemas)
                                            {
                                                <option> @item.Nombre</option>
                                            }

                                        </datalist>

                                   

                                     </div>
                                
                                   <div class="col-12  col-md-3 offset-md-3 mb-3">

                                    <input type="text" class="form-control form-control-sm " id="mantenedor" placeholder="Mantenedor" disabled readonly="readonly"   />


                                    </div>



                                <div class="col-12 col-md-4 mb-3">


                                    @*<select name="Id" asp-items="@ViewBag.subsistema" class="form-select form-select-sm" id="subsistema"></select>*@

                                    <input class=" subsistema form-control form-control-sm campos_obligatorios" name="Id" list="Listsubsistemas" id="subsistemas" placeholder="Subsistemas">

                                    <datalist id="Listsubsistemas">
                                       @* @foreach (var item in subsistemas)
                                        {
                                            <option> @item.Nombre</option>
                                        }*@

                                    </datalist>

                                   

                                </div>


                                <div class="col-12 col-md-4 mb-3">

                                    @*<select name="Id" asp-items="@ViewBag.estacioes" class="form-select form-select-sm" id="estaciones"></select>*@


                                    <input class="form-control form-control-sm campos_obligatorios" name="Id" list="Listestaciones" id="estaciones" placeholder="Estaciones">

                                    <datalist id="Listestaciones">
                                        @foreach (var item in estaciones)
                                        {
                                            <option> @item.Nombre</option>
                                        }

                                    </datalist>

                                </div>


                                <div class="col-12 col-md-4 mb-3 ">

                                    @*<select name="Id" asp-items="@ViewBag.ubicacion" class="form-select form-select-sm" id="ubicacion"></select>*@

                                    <input class="form-control form-control-sm campos_obligatorios" name="Id" list="Listubicaciones" id="ubicaciones" placeholder="Ubicaciones">

                                    <datalist id="Listubicaciones">
                                        @foreach (var item in ubicaciones)
                                        {
                                            <option> @item.Nombre</option>
                                        }

                                    </datalist>
                                </div>
                               <div class="col-12 col-md-4 ">

                                    <input id="usuario" class="form-control-sm"  hidden readonly="readonly" />

                                </div>



                                <!--ir-->
                                <div class="col-12 mb-2">


                                    <input class="form-control form-control-sm cascada campos_obligatorios" name="Id" list="listcascada" id="descripcioncascada" placeholder="Selecione un activo">

                                    <datalist id="listcascada">

                                        @*<option value="">Seleccione una descripcion</option>*@

                                    </datalist>
                                </div>



                                @*<div class="col-12 pb-3">

                                        <select name="Id" class="form-select form-select-sm" id="descripcioncascada">

                                            <option value="">Seleccione una descripcion</option>

                                        </select>


                                    </div>*@


                                <div class="col-12 ">

                                    <textarea cols="100" rows="3" class="form-control mb-3 campos_obligatorios" name="" id="descripcion" placeholder="Descripcion de Averia"></textarea>

                                </div>
                                <div class="col-12 col-md-3 mb-2">

                                    <input class="form-control form-control-sm campos_obligatorios" id="codigooperador" placeholder="Codigo. Op." onkeyup="buscaroperadorreporte()">

                                </div>

                                <div class="col-12 col-md-4 mb-2">

                                    <input class="form-control form-control-sm campos_obligatorios" id="nombreoperador" placeholder="Nombre Op.">

                                </div>

                                <div class="col-12 col-md-5 mb-3 ">

                                    <input class="form-control form-control-sm campos_obligatorios" id="fechareporte" ondblclick="ObtenerfechaReporte()" maxlength="16" placeholder="Fecha Averia">

                                </div>



                            </div>

                            <div class="row  d-flex justify-content-between  gx-2 ms-md-3 me-md-2  mx-3 mx-md-0  ">

                                <div class="col-4 ">

                                    <input type="checkbox" id="reutilizar">
                                    <label class="text-white" for="reutilizar">Reutilizar</label>

                                </div>

                                <div class="col-4  gx-2  ">

                                    <input type="submit" class="form-control form-control-sm btn btn-sm btn-warning"  value="Reutilizar Registro" id="reutilizarenviar">

                                </div>

                                <div class="col-4  gx-2 mb-md-3">

                                    <input type="submit"  class="form-control form-control-sm btn btn-sm btn-success" value="Agregar" id="enviar" >

                                </div>
                            </div>
                            


                        </div>

                        <!------------------reportes de averias---------------------->

                        <div class=" col-secundaria col-sm-4 col-md-4 border-end border-white border-2">



                            <div class="row gx-md-2 mx-2 ">

                                <div class="col-12 pb-3 pt-2 text-white ">
                                    Reportes de Averias
                                </div>
                                <div class=" col-12 col-md-5 mb-3 ">
                                    <select name="Id" asp-items="@ViewBag.criticidad" class="form-select form-select-sm campos_obligatorios" id="criticidad"></select>

                                </div>

                                <div class=" col-12 col-md-5 offset-md-2 mb-3 ">
                                    <select name="Id" asp-items="@ViewBag.SM" class="form-select form-select-sm campos_obligatorios" id="sm"></select>

                                </div>

                            
                                <div class=" col-12 col-md-5 mb-3">
                                    <select name="Id" asp-items="ViewBag.estadoOTs" class="form-select form-select-sm" id="estado"></select>

                                </div>
                                <div class=" col-12 col-md-4 offset-md-2 mb-3 ">

                                    <input type="number" class="form-control form-control-sm" id="ot"  placeholder="#OT" min="0">

                                </div>



                                <div class="col-12 mb-3">

                                    <textarea cols="100" rows="3" class="form-control " name="" id="comentario" placeholder="Comentario"></textarea>

                                </div>

                                <div class="col-12 col-md-5 mb-3">

                                    <input class="form-control form-control-sm" id="fechanotificacion" ondblclick="ObtenerfechaNotificacion()" maxlength="16" placeholder="Fecha Notif.">

                                </div>

                                <div class="col-12 col-md-5 offset-md-2 mb-3">

                                    @*<select name="Id" asp-items="@ViewBag.mantenedor" class="form-select form-select-sm" id="mantenedorreporte"></select>*@

                                    <input class="form-control form-control-sm" name="Id" list="Litsmantenedornotificar" id="mantenedornotificar" placeholder="Mantenedor Notif.">

                                    <datalist id="Litsmantenedornotificar">

                                        @foreach (var item in mantenedornotificar)
                                        {
                                            <option> @item</option>
                                        }

                                    </datalist>
                                </div>

                            </div>

                        </div>

                        <!----------cierre de averias----------------->


                        <div class=" col-secundaria col-12 col-sm-4 ">


                            <div class="row  align-items-center d-flex  justify-content-md-around  mx-2  h-100 ">

                                <div class="col-12  text-white mb-3 ">
                                    Cierre de Averias
                                </div>


                                <div class=" col-12 col-md-5 mb-3 ">

                                    <input class="form-control form-control-sm" placeholder="Fecha inicio" maxlength="16" id="fechainicio">
                                </div>

                                <div class=" col-12 col-md-5 mb-3 ">

                                    <input class="form-control form-control-sm" placeholder="Fecha final" maxlength="16" id="fechafinal">
                                </div>

                                <div class=" col-12 col-md-5 mb-3 ">

                                    <input class="form-control form-control-sm" placeholder="Codigo Op." id="codigooperadorfinal">
                                </div>

                                <div class=" col-12 col-md-5 mb-3  ">

                                    <input class="form-control form-control-sm" placeholder="Nombre Op." id="nombreoperadorfinal">
                                </div>


                                <div class=" col-12 col-md-5 mb-3 ">


                                    @*<select asp-items="ViewBag.mantenedor" class="form-select form-select-sm" ></select>*@


                                    <input class="form-control form-control-sm" name="Id" list="Litsmantenedorfinal" id="mantenedorcierre" placeholder="Mant. Reparo">

                                    <datalist id="Litsmantenedorfinal">
                                        @foreach (var item in mantenedorreparo)
                                        {
                                            <option> @item.Nombre</option>
                                        }

                                    </datalist>
                                </div>

                                <div class="col-12 mb-3 ">

                                    <div class="row ">

                                        <div class="col-4 ">

                                            <input type="reset" class=" form-control form-control-sm btn btn-sm btn-primary text-white " value="nuevo registro" id="btn_nuevoregistro" />


                                        </div>

                                        <div class="col-2" m>

                                            <input type="color" id="inputcolor"  title="Choose your color">
                                        </div>


                                    </div>






                                </div>



                            </div>





                        </div>




                    </div>



                </div>


            </form>


        </div>









    </div>

    <script src="https://kit.fontawesome.com/c6f899d35a.js" crossorigin="anonymous"></script>
   @*<script src="~/js/fontawesome.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/mensajes_errores.js" ></script>
    <script>


        let conexion = new signalR.HubConnectionBuilder().withUrl("/GesinHub").build();

        conexion.start();


        conexion.on("recibir", () => ListarTodo());
       


        let ListarTodo = () => {


           
            let url = "Reportes/Listarasincrono";
            Listardata(url);


            
         

           

        }

        //funcion para mostrar el spinner de la tabla
       
        function mostrar_spinnerTable(){

            const tabla = document.getElementById("tabla");

            tabla.classList.add("ocultar_contenido");


   

            const contenedor_spinner = document.getElementById("contenedor_spinner");
                  contenedor_spinner.classList.add("spin");

              //iniciamo removiendo esta clase para cada vez que se llame a esta funcion se quite esta clase
              //ya que al ocultar el spinner se se agrega y si o se la quitamos no se volvera a mostrar

              contenedor_spinner.classList.remove("ocultar_contenido");
        }




        //funcion para ocultar el spinner de la tabla

        function ocultar_spinnertable(){


             const contenedor_spinner = document.getElementById("contenedor_spinner");


                contenedor_spinner.classList.remove("spin");

               contenedor_spinner.classList.add("ocultar_contenido");

           
             const tabla = document.getElementById("tabla");

                 tabla.classList.remove("ocultar_contenido");

        

        }



        //funcion para mostrar el spinner inicial

         function mostrar_spinnerInicial(){

            const spin_container = document.getElementById("spin_container")

            spin_container.classList.add("spinner")

            const contenido = document.getElementById("container")

            contenido.classList.add("ocultar_contenido")
          
            
        }

            mostrar_spinnerInicial()


        //funcion para ocultar el spinner inicial

        function ocultar_spinnerInicial(){

            const spin_container = document.getElementById("spin_container")

            spin_container.classList.add("ocultar_contenido")

            const contenido = document.getElementById("container")

            contenido.classList.remove("ocultar_contenido")
          
            
        }

        window.onload = function () {

            ocultar_spinnerInicial();
          
            //ocultar btn reutilizar solo se muestra cuando se va a actualizar un registro
            let reutilizarenviar = document.getElementById("reutilizarenviar");

            reutilizarenviar.classList.add("ocultar_contenido")

            //mostrar contenido de la tabla

           

           ListarTodo();
           
           
        

        }

      


        function Fecha(fecha) {

            let date = new Date()


            let dias = date.getDate();
            let meses = date.getMonth() + 1;
            let anios = date.getFullYear();
            let horas = date.getHours();
            let minutos = date.getMinutes();


            minutos = minutos <= 9 ? "0" + minutos : minutos;

            horas = horas <= 9 ? "0" + horas : horas;

            meses = meses <= 9 ? "0" + meses : meses;

            fecha.value = `${dias}/${meses}/${anios} ${horas}:${minutos}`

        }

        function ObtenerfechaReporte() {

            let fechareportes = document.getElementById("fechareporte");

            fechareportes.classList.remove("error");

            Fecha(fechareportes)

        }


        function ObtenerfechaNotificacion() {

            let fechanotificar = document.getElementById("fechanotificacion");

            Fecha(fechanotificar)

        }

        let fechainicio = document.getElementById("fechainicio");

        fechainicio.ondblclick = function (fechainicio) {

            let fecha = document.getElementById("fechainicio");
            Fecha(fecha)


        }

        let fechafinal = document.getElementById("fechafinal");


        fechafinal.addEventListener("dblclick", function () {

            let fecha = document.getElementById("fechafinal");

            Fecha(fecha);
        })


        function Operador(codigooperador, nombreoperador) {



            let url = "Reportes/Operador/?op=" + codigooperador;

            fetch(url)
                .then(res => res.json())
                .then(data => {



                    nombreoperador.value = "";
                    nombreoperador.value = data[0].value;

                })


        }


        function buscaroperadorreporte() {

            let codOperador = document.getElementById("codigooperador").value;
            let nomOperador = document.getElementById("nombreoperador");

            Operador(codOperador, nomOperador);




        }

        function buscaroperadorcierre() {

            let codOperador = document.getElementById("codigooperadorfinal");
            let nomOperadorfinal = document.getElementById("nombreoperadorfinal");

            Operador(codOperador, nomOperadorfinal)

        }


        let codOperadorfinal = document.getElementById("codigooperadorfinal");

        codOperadorfinal.onkeyup = function () {

            let codigooperadorfinal = document.getElementById("codigooperadorfinal").value
            let nombreoperadorfinal = document.getElementById("nombreoperadorfinal");

            Operador(codigooperadorfinal, nombreoperadorfinal)



        }




        const form = document.getElementById("formulario");


        function CrearEditarReportes(e) {

            e.preventDefault();

           


            let idreportes = Number(document.getElementById("idreportes").value);
            let sistema = document.getElementById("sistemas");
            let subsistemas = document.getElementById("subsistemas");
            let estaciones = document.getElementById("estaciones");
            let ubicaciones = document.getElementById("ubicaciones");
            let descripcion = document.getElementById("descripcion");
            let codigooperador = document.getElementById("codigooperador");
            let nombreoperador = document.getElementById("nombreoperador");
            let fechareportes = document.getElementById("fechareporte");
            let criticidad = document.getElementById("criticidad");
            let Sm = document.getElementById("sm");
            let estadoot = document.getElementById("estado");
            let ot = document.getElementById("ot");
            let comentario = document.getElementById("comentario").value;
            let fechanotificacion = document.getElementById("fechanotificacion").value;
            let mantenedornotificar = document.getElementById("mantenedornotificar").value;
            let fechainicio = document.getElementById("fechainicio").value;
            let fechafinal = document.getElementById("fechafinal").value;
            let nombreoperadorfinal = document.getElementById("nombreoperadorfinal").value;
            let codigooperadorfinal = document.getElementById("codigooperadorfinal").value;
            let mantenedorcierre = document.getElementById("mantenedorcierre").value;
            let usuario = Number(document.getElementById("usuario").value);


            ot.style.backgroundColor = "";
            //descripcioncascada.value == ""? descripcioncascada.classList.add("error"): descripcioncascada.classList.remove("error") ;
            sistema.value == "" ? sistema.classList.add("error") : sistema.classList.remove("error");
            subsistemas.value == "" ? subsistemas.classList.add("error") : subsistemas.classList.remove("error");
            estaciones.value == "" ? estaciones.classList.add("error") : estaciones.classList.remove("error");
            ubicaciones.value == "" ? ubicaciones.classList.add("error") : ubicaciones.classList.remove("error");
            descripcion.value == "" ? descripcion.classList.add("error") : descripcion.classList.remove("error");
            codigooperador.value == "" ? codigooperador.classList.add("error") : codigooperador.classList.remove("error");
            nombreoperador.value == "" ? nombreoperador.classList.add("error") : nombreoperador.classList.remove("error");
            Number(fechareportes.value) == 0 ? fechareportes.classList.add("error") : fechareportes.classList.remove("error");
            criticidad.value == "" ? criticidad.classList.add("error") : criticidad.classList.remove("error");
            Sm.value == "" ? Sm.classList.add("error") : Sm.classList.remove("error");

            //con esto decimos que si el boton que disparo el evento submit o enviar el formulario fue
            // el btn reutilizar Registro, cuanto tenemos un registro cargado para actualizar
            // entoces este no se actualizara si no se creara uno nuevo
            if (e.submitter.id == "reutilizarenviar") {


                idreportes = 0;




            }






            // cuando se aya enviado el formulario entonces me valida nuevamente los campos
            //esto es para que una vez esten lleno se quite en automatico el color rojo sin tener que enviar
            //si no hicieramos esto aunquie llenemos los campos se quedarian en rojo hasta enviar otra vez el form
            if (e.isTrusted) {

                //traemos el elemento padre
                let divPadre = document.getElementById("divPadre");

                //traemos los elementos hijos y lo convertimos en un array
                let hijos = Array.prototype.slice.apply(document.getElementsByClassName("campos_obligatorios"));

                //creamos la funcion para el evento change que disparara un hijo
                function cambio(e) {

                    //aqui comprobamos si el evento fue disparado por un elemento que es obligatorio
                    if (e.target.classList.contains("campos_obligatorios")) {

                        //aqui gardamos en una variable el indice del elemento que disporo el evento
                        let index = hijos.indexOf(e.target)

                        //aqui volovemos a verificar y decimos que si el elemento que disparo el evento tiene un valor le quitela clase error
                        //y si el elemento no contiene ningun valor me le siga aplicando la clase error
                        e.target.value != "" ? hijos[index].classList.remove("error") : hijos[index].classList.add("error");

                        //aqui verificamos que el el elemento que disparo el evento fue el que tiene el id codigooperador
                        //de ser asi entonces tambien le quitamos la clase error a nombre operador
                        //ya que estos campos son combinados
                        if (e.target.id == "codigooperador") {

                            nombreoperador.classList.remove("error");
                        }

                    }

                }

                //eventeo change aplicado al padre pero los hijos son quienes lo dispararan
                divPadre.addEventListener("change", cambio);



            }


            //alert(fechareportes.value.length)
            //  alert(isNaN(Date.parse(fechareportes.value)))

            if (sistema.value == "" || subsistemas.value == "" || estaciones.value == "" || ubicaciones.value == "" || descripcion.value == ""
                || nombreoperador.value == "" || codigooperador.value == "" || fechareportes.value == "" || Number(criticidad.value) == 0 || Number(Sm.value) == 0) {



                modalerror('Los Campos en rojos son obligatorios', 'center-end')

               
            }
            else {


           
               
                // si esta funcion regresa true la fecha no es valida
                //si regresa false la fecha es valida
                //si la fecha viene vacia tambien regresaresmos false ya que las fechas no son obligatorias ecepto la fecha de averia
                //pero el campo fecha averia es validado mas arriba que si viene vacio muestre el campo en rojo y nopermita enviar el formulario
               function validarfechas(fecha){


                    if (fecha !=="") {
                       
                       const fechasplit = fecha.split("/", 3);

                        if(fechasplit.length <3){

                          
                            return true
                        }

                        else{

                           
                           const fechasplit2 = fechasplit[2].split(" ", 2)

                           const fechaformateada = `${fechasplit2[0]}/${fechasplit[1]}/${fechasplit[0]} ${fechasplit2[1]}`

                            return isNaN(Date.parse(fechaformateada))

                        }

                       
                   }
                   else{

                    

                        return false
                   }
                  
                    

                        
                  

               }

               
               
            
             
               //verificamos si fecha averia es valida
                if (fechareportes.value.length ==16 && !validarfechas(fechareportes.value)) {

                    //aqui verifiamos una de las fechas no sea valida para mostrar el error
                    if (fechanotificacion.length !=16 && validarfechas(fechanotificacion)
                        || fechainicio.length != 16 && validarfechas(fechainicio)
                        || fechafinal.length != 16 && validarfechas(fechafinal) )
                    {

                        //aqui validamos cual fecha exactamente no es la valida para decirle al usuario cual la que deve verificar

                        if(validarfechas(fechanotificacion)){

                           
                            modalerror('La fecha introducida en el campo mantenedor notificar no es valida','' ,'Formato válido: DD-MM-YYYY hh:mm')
                            
                        }
                        else if(validarfechas(fechainicio)){

                           
                            modalerror('La fecha introducida en el campo fecha inicio no es valida','' ,'Formato válido: DD-MM-YYYY hh:mm')
                             
                        }
                        else {

                           
                            modalerror( 'La fecha introducida en el campo fecha final no es valida','' ,'Formato válido: DD-MM-YYYY hh:mm')
                            
                        }
                        
                     

                    }
                    else{

                        //si todas las fechas son valida o las que no son abligatirias estan vacias enviamos el formulario

                         let url = "Reportes/CrearEditarReportes/reporte"

                        fetch(url, {
                            method: 'POST',
                            body: JSON.stringify({

                                id: idreportes,
                                sistema: sistema.value,
                                subsistema: subsistemas.value,
                                estacion: estaciones.value,
                                ubicacion: ubicaciones.value,
                                descripcion: descripcion.value,
                                operadorReporte: nombreoperador.value,
                                codigoOperadorReporte: codigooperador.value,
                                fechaaveriaGuardarMostrar: fechareportes.value,
                                idCriticidad: Number(criticidad.value),
                                idSm: Number(Sm.value),
                                idEstadoOt: Number(estadoot.value),
                                ot: Number(ot.value),
                                comentario: comentario,
                                fechanotificacionguardarmostrar: fechanotificacion,
                                mantenedorNotificar: mantenedornotificar,
                                fechainicioguardarmostrar: fechainicio,
                                fechafinalguardarmostrar: fechafinal,
                                operadorCierre: nombreoperadorfinal,
                                codigoOperadorCierre: codigooperadorfinal,
                                mantenedorReparo: mantenedorcierre,
                                idUsuarios: usuario



                            }),
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(res => res.json())
                            .then(data => {

                                //se creo un registro
                                if (data == 1) {



                                    let url = "Reportes/Listarasincrono";
                                    //llamamos al metodo listar para que vuelva a cargar la tabla
                                    Listardata(url);




                                    Swal.fire({
                                        position: 'center-end',
                                        icon: 'success',
                                        title: 'Reporte agregado satisfactoriamente',
                                        showConfirmButton: false,
                                        timer: 1000
                                    })


                                    const check = document.getElementById("reutilizar")

                                    // si el chekbox no esta chekiado entonces resetiamos/ limpiamos el formulario
                                    if (!check.checked) {

                                        form.reset();

                                    }

                                }
                                // se actualizo un registro
                                else if (data == 2) {



                                    let url = "Reportes/Listarasincrono";
                                    //llamamos al metodo listar para que vuelva a cargar la tabla
                                    Listardata(url);



                                    Swal.fire({
                                        position: 'center-end',
                                        icon: 'success',
                                        title: 'Reporte Actualizado satisfactoriamente',
                                        showConfirmButton: false,
                                        timer: 1000
                                    })

                                    const check = document.getElementById("reutilizar")

                                    if (!check.checked) {

                                        form.reset();
                                        document.getElementById("enviar").value = "Agregar";
                                        reutilizarenviar.style.display = "none";

                                    }

                                }
                                else if (data == 3) {


                                    Swal.fire({


                                        position: 'center',
                                        icon: 'warning',
                                        html: `<p>No debes de escribir en los campos Sistemas, Subsistemas y Estaciones.
                                                                   <b>Debes elegir del menu de opciones que estos ofrecen</b>.</p>
                                                                   `,

                                        showConfirmButton: true,
                                        background: '#130a28',
                                        color: '#ffff',




                                    })
                                }

                                else {


                                    Swal.fire({


                                        position: 'center',
                                        icon: 'error',
                                        text: `Algo salio mal vuelva a intentarlo, si el problema persiste consulte con soporte tecnico
                                                                   `,
                                        showConfirmButton: true,
                                        background: '#130a28',
                                        color: '#ffff'



                                    })


                                }




                            })



                    }

                    
                    
                }


                else {


                    modalerror('La fecha introducida en el campo fecha averia no es valida', '', 'Formato válido: DD-MM-YYYY hh:mm')

                }
            }




        }

        form.addEventListener("submit", CrearEditarReportes);


        // Buscar la data y cargarla al formulario para ediarla

        function BuscarEditar(idreporte) {

            const otcolor = document.getElementById("ot")
            otcolor.style.backgroundColor = "";

            let sistemas = document.getElementById("sistemas");
            let subsistemas = document.getElementById("subsistemas");
            let estaciones = document.getElementById("estaciones");
            let ubicaciones = document.getElementById("ubicaciones");
            let descripcioncascada = document.getElementById("descripcioncascada");
            let descripcion = document.getElementById("descripcion");
            let codigooperador = document.getElementById("codigooperador");
            let fechareportes = document.getElementById("fechareporte");
            let criticidad = document.getElementById("criticidad");
            let sm = document.getElementById("sm");
            let nombreoperador = document.getElementById("nombreoperador");

            descripcioncascada.classList.remove("error");
            sistemas.classList.remove("error");
            subsistemas.classList.remove("error");
            estaciones.classList.remove("error");
            ubicaciones.classList.remove("error");
            descripcion.classList.remove("error");
            codigooperador.classList.remove("error");
            fechareportes.classList.remove("error");
            criticidad.classList.remove("error");
            sm.classList.remove("error");
            nombreoperador.classList.remove("error");


            reutilizarenviar.style.display = "block";
            document.getElementById("enviar").value = "Actualizar";

            let url = "Reportes/BuscarEditar/?id=" + idreporte;

            fetch(url)
                .then(res => res.json())
                .then(data => {
                 


                    let Idreportes = document.getElementById("idreportes").value = data.id;
                    let sistemas = document.getElementById("sistemas").value = data.sistemasNombre;
                    let subsistemas = document.getElementById("subsistemas").value = data.subsistemasNombre;
                    let estaciones = document.getElementById("estaciones").value = data.estacionesNombre;
                    let ubicaciones = document.getElementById("ubicaciones").value = data.ubicacion;
                    let descripcion = document.getElementById("descripcion").value = data.descripcion;
                    let codigooperador = document.getElementById("codigooperador").value = data.codigoOperadorReporte;
                    let nombreoperador = document.getElementById("nombreoperador").value = data.operadorReporte;
                    let fechareportes = document.getElementById("fechareporte").value = data.fechaaveriaGuardarMostrar;
                    let criticidad = document.getElementById("criticidad").value = data.idCriticidad;
                    let sm = document.getElementById("sm").value = data.idSm;
                    let estadoot = document.getElementById("estado").value = data.idEstadoOt;
                    let ot = document.getElementById("ot").value = data.ot;
                    let comentario = document.getElementById("comentario").value = data.comentario;
                    let fechanotificacion = document.getElementById("fechanotificacion").value = data.fechanotificacionguardarmostrar;
                    let mantenedornotificar = document.getElementById("mantenedornotificar").value = data.mantenedorNotificar;
                    let fechainicio = document.getElementById("fechainicio").value = data.fechainicioguardarmostrar;
                    let fechafinal = document.getElementById("fechafinal").value = data.fechafinalguardarmostrar;
                    let codigooperadorfinal = document.getElementById("codigooperadorfinal").value = data.operadorCierre;
                    let nombreoperadorfinal = document.getElementById("nombreoperadorfinal").value = data.codigoOperadorCierre;
                    let mantenedorcierre = document.getElementById("mantenedorcierre").value = data.mantenedorReparo;
                    let usuario = document.getElementById("usuario").value = data.idUsuarios;


                    //si estado OT es duplicada el campo ot lo ponemos de color gris
                    if (estadoot == 7) {


                        otcolor.style.backgroundColor = "grey";
                    }


                    //aqui llamamos  las funcion que carga el Listado de subsistema y de activo descripcion en cascada para que al cargar un registro este tambie me cargue los subsistemas
                    SubsistemaCascada();
                    descripcionCascada();







                })




        }

        //funcion para lista en la misma se cambia de color la fila de la tabla segun el estado de la ot

        function Listardata(url) {


        //mostrarmos el espinner a lo que carga la data

            mostrar_spinnerTable()


            fetch(url)
                .then(res => res.json())
                .then(data => {



                    let Pintardata = document.getElementById("Pintardata");

                    let filasTabla = "";

                    for (var i = 0; i < data.length; i++) {

                        let conteo = 1;

                        // si de cierre viene null aqui le decimos que sea igual a vacio,
                        // esto mismo lo hacemos en el backend para otros campos
                        if (data[i].operadorCierreNombre == null) {

                            data[i].operadorCierreNombre = "";

                        }


                        // funcion que contiene la data a pintar en la tabla
                        function pintar(color) {

                            return `

                                        <tr style ="background-color:${color}; font-size:14px" ondblclick="BuscarEditar(${data[i].id})">

                                                 <td>${conteo + i}</td>
                                                    <td>${data[i].ot}</td>
                                                    <td>${data[i].fechaaveriaGuardarMostrar}</td>
                                                    <td>${data[i].sistemasNombre}</td>
                                                    <td>${data[i].subsistemasNombre}</td>
                                                    <td>${data[i].estacionesNombre}</td>
                                                    <td>${data[i].ubicacion}</td>
                                                    <td>${data[i].descripcion}</td>
                                                    <td>${data[i].smNombre}</td>


                                                            ${data[i].criticidadNombre == "Bajo Impacto" ?

                                    `
                                                                   <td style ="background-color:#8dff43">${data[i].criticidadNombre}</td>
                                                            `
                                    :
                                    `
                                                                <td style ="background-color:#CE2B08">${data[i].criticidadNombre}</td>

                                                            `

                                }




                                                    <td>${data[i].estadoOtNombre}</td>
                                                    <td>${data[i].mantenedorNombre}</td>
                                                    <td>${data[i].operadorReporte}</td>
                                                    <td>${data[i].codigoOperadorReporte}</td>

                                                    <td>${data[i].fechanotificacionguardarmostrar}</td>
                                                    <td>${data[i].mantenedorNotificar}</td>


                                                    <td>${data[i].fechainicioguardarmostrar}</td>
                                                    <td>${data[i].mantenedorReparo}</td>


                                                    <td>${data[i].operadorCierre}</td>
                                                    <td>${data[i].codigoOperadorCierre}</td>
                                                    <td>${data[i].fechafinalguardarmostrar}</td>
                                                    <td>${data[i].comentario}</td>
                                                    <td>${data[i].usuariosCodigo}</td>
                                                    <td>${data[i].usuariosNombre}</td>
                                                    <td>${data[i].usuarioActualizoNombre}</td>


                                        </tr>

                                    `






                        }



                        filasTabla += `

                                     ${data[i].estadoOtNombre == "Creada" ?

                                `

                                       ${pintar("#F8F2CD")}


                                    `

                                : data[i].estadoOtNombre == "Reportada" ?


                                    `
                                         ${pintar("#FFCBCB")}

                                    `

                                    : data[i].estadoOtNombre == "Creada Reportada" ?


                                        `

                                         ${pintar("#D3F8FC")}
                                    `

                                        : data[i].estadoOtNombre == "Cerrada" ?


                                            `
                                    ${pintar("#CEF8CD")}


                                    `

                                            : data[i].estadoOtNombre == "Duplicada" ?


                                                `    ${pintar("#CECECE")}


                                    `

                                                : data[i].estadoOtNombre == "Falsa Averia" ?


                                                    `
                                    ${pintar("#F3A9FF")}


                                    `


                                                    : data[i].estadoOtNombre == "Reutilizar" ?


                                                        `

                                    ${pintar("#FDFF8B")}

                                    `


                                                        :

                                                        `


                                         ${pintar("#FFFFF")}
                                   `
                            }




                            `



                    }
                    
                    Pintardata.innerHTML = filasTabla;

                    //una vez la data pintada ocultamos el espinner
                    ocultar_spinnertable();
                   
                })
              
           
        }



        //funcion para que al filtrar por ot cuando se presione entre se realize el filtrado


        function presionar_tecla(e) {


            let otfiltro = document.getElementById("filtroOt").value;

            let obtener_tecla = e.keyCode; // tambien puedo usar event

            //aqui decimos que si la tecla presionada fue la tecla enter me ejecute el codigo dentro
            if (obtener_tecla == 13) {

                //este codigo me enviar a realizar el filtro
                let url = "Reportes/Listarasincrono/?Ot=" + otfiltro;

                Listardata(url);
            };


        }


        let otfiltro = document.getElementById("filtroOt");

        //aqui le aplicamos que al presionar la tecla se ejecute la funcion obtener_tecla
        otfiltro.onkeydown = presionar_tecla;



        //--------funcion para filtrar---------------------------

        function filtrar() {


            let estaciones = document.getElementById("fitroestaciones").value;
            let subsistemas = document.getElementById("filtrosubsistema").value;
            let fecha = document.getElementById("filtrofecha").value;
            let estadoot = document.getElementById("filtroestadoot").value;
            let usuario = document.getElementById("fitrousuario").value;

            let url = "Reportes/Listarasincrono/?IdEstacion=" + estaciones + "&IdSubsistema=" + subsistemas + "&fechaaveriaGuardarMostrar=" + fecha
                + "&IdEstadoOt=" + estadoot + "&IdUsuarios=" + usuario;

            Listardata(url)


        }


        //------------funcion para mostrar la fecha y hora --------------------
        function reloj() {

            let mostrarreloj = document.getElementById("reloj")

            let fecha = new Date();

            let dias = fecha.getDate();

            //le sumams uno para obtener el mes actual ya que los meses tienen indice y comienzan por el cero
            let meses = fecha.getMonth() + 1;
            let anios = fecha.getFullYear();
            let horas = fecha.getHours();
            let minutos = fecha.getMinutes();
            let segundos = fecha.getSeconds();



            segundos = (segundos <= 9 ? "0" + segundos : segundos);
            minutos = minutos <= 9 ? "0" + minutos : minutos;


            horas = horas == 00 ? horas + 12 : horas;

            //le restamos 12 para convertir el horario de 12 horas ya que viene en 24
            horas = horas >= 13 ? horas - 12 : horas;
            horas = horas <= 9 ? "0" + horas : horas;

            meses = meses <= 9 ? "0" + meses : meses;



            mostrarreloj.innerHTML = `${dias}/${meses}/${anios} <br> ${horas}:${minutos}:${segundos}`

        }

        //lo que actualiza la hora cada segundo
        setInterval(reloj, 1000)


        //-----funcion para llenar el campo Subsistema cascada -----------------
        //esta funcion la dispara el campo sistema con el evento change-----

        const sistema = document.getElementById("sistemas");

        sistema.addEventListener("change", SubsistemaCascada)

        function SubsistemaCascada() {








            let Listsubsistemas = document.getElementById("Listsubsistemas");
            Listsubsistemas.innerHTML = "";

            const sistemas = document.getElementById("sistemas");

            if (sistemas.value != "") {

                let url = "/Reportes/SubsistemaCascada/?sistema=" + sistemas.value;
                fetch(url)
                    .then(res => res.json())
                    .then(data => {


                        data.forEach(element => {


                            let ElementOpcion = document.createElement("option");

                            let TextOpcion = document.createTextNode(`${element.nombre}`);


                            ElementOpcion.appendChild(TextOpcion)



                            Listsubsistemas.appendChild(ElementOpcion);

                        })



                    })


            }
            else {

                //con esto decimos que si no se elige ningun sistema, el list de subsistema y de activo descripcion  estaran vacio
                //tambien su input estaran vacios


                document.getElementById("mantenedor").value = "";
                document.getElementById("subsistemas").value = "";


                Listsubsistemas.innerHTML = "";
                descripcionCascada()
            }







        }





        //-----funcion para llenar el campo descripcion cascada-----------------
        //esta funcion la dispara el campo Subsistema con el evento change-----

        const subsistema = document.getElementById("subsistemas");

        function descripcionCascada() {


            const subsistemas = document.getElementById("subsistemas");
            const listcascada = document.getElementById("listcascada");

            listcascada.innerHTML = "";

            if (subsistemas.value != "") {

                let url = "/Reportes/Descripcion/?subsistema=" + subsistemas.value;
                fetch(url)
                    .then(res => res.json())
                    .then(data => {


                        for (let i = 0; i < data.length; i++) {

                            document.getElementById("mantenedor").value = `${data[i].mantenedor}`;



                            let ElementOpcion = document.createElement("option");

                            let TextOpcion = document.createTextNode(`${data[i].descripcion}`);

                            ElementOpcion.appendChild(TextOpcion);

                            listcascada.appendChild(ElementOpcion);

                        }




                    })

            }
            else {

                listcascada.innerHTML = "";

            }





        }

        subsistema.addEventListener("change", descripcionCascada)





        //esta funcion se ejecuta cuando hacemos un cambio en el campo mantenedor notificar reporte
        // si seleccionamos uno me cambia el estado a reportada
        const mantenedornotificar = document.getElementById("mantenedornotificar");

        function mantenedorestado() {

            EstadoRegistro();
        }
        mantenedornotificar.addEventListener("keyup", mantenedorestado)



        //---------funcion para cambiar los estasdo de la ot segun algunas condiciones
        //esta funcion la dispara el campo OT con el evento keyup

        const ot = document.getElementById("ot");
        ot.addEventListener('keyup', EstadoRegistro)

        function EstadoRegistro() {


            const estadoot = document.getElementById("estado");
            const codigooperadorfinal = document.getElementById("codigooperadorfinal");
            const btnEnviar = document.getElementById("enviar")

            const url = "Reportes/BuscarOt/?ot=" + ot.value;

            fetch(url)
                .then(res => res.json())
                .then(data => {


                    // si existen ordenes con el mismo numero de ot entonces me cambia a estado duplicada y pone el color gris
                    if (data >= 1) {


                        ot.style.backgroundColor = "grey";

                        if (codigooperadorfinal.value != "") {

                            //cerrada
                            estadoot.value = 5;


                        }
                        else {


                            // duplicada
                            estadoot.value = 7;
                        }






                    }
                    // se ejecuta si no existen reportes con ot duplicada

                    else if (data == 0) {

                        const mantenedornotificar = document.getElementById("mantenedornotificar");
                        const estadoot = document.getElementById("estado");
                        const codigooperadorfinal = document.getElementById("codigooperadorfinal");


                        ot.style.backgroundColor = "";

                        //aqui le decimos que si existe algun valor en el campo ot y no esta duplicado me cambie el estado a creada reportada
                        if (ot.value != "" && mantenedornotificar.value == "" && codigooperadorfinal.value == "") {

                            //creada
                            estadoot.value = 1;


                        }




                        else if (ot.value == "" && mantenedornotificar.value != "" && codigooperadorfinal.value == "") {

                            //reportada
                            estadoot.value = 2;

                        }

                        else if (ot.value != "" && mantenedornotificar.value != "" && codigooperadorfinal.value == "") {

                            //creada reportada
                            estadoot.value = 3;

                        }

                        else if (codigooperadorfinal.value != "" && ot.value != "" && mantenedornotificar.value != "") {

                            //cerrada
                            estadoot.value = 5;

                        }

                        // si no existen valores en el campo ot evaluamos nuevamente
                        else {

                            const estadoot = document.getElementById("estado");

                            //sin estado
                            estadoot.value = "";
                        }


                    }

                })


        }



        let codigooperadorfinal = document.getElementById("codigooperadorfinal");


        //funcion para disparar el evento de cerrar OT este asu vez dispara el de estadoregistro

        let EstadoOTCerrado = () => EstadoRegistro();

        codigooperadorfinal.addEventListener('keyup', EstadoOTCerrado);

        //-----------funcion para Limpiar los campos del filtrado-----------------------



        const btnlimpiar = document.getElementById("limpiar");


        btnlimpiar.addEventListener("click", LimpiarFiltros);


        function LimpiarFiltros() {

            document.getElementById("filtroOt").value = "";
            document.getElementById("filtrofecha").value = "";
            document.getElementById("fitroestaciones").value = "";
            document.getElementById("filtrosubsistema").value = "";
            document.getElementById("filtroestadoot").value = "";
            document.getElementById("fitrousuario").value = "";


            let url = "Reportes/Listarasincrono"
            Listardata(url)

            LimpiarFiltros
        }




        // -------para auto completar la descripcion de la averia-------------------
        //Esta funcion la dispara el campo selecion de activo descripcion con el evento change


        const descripcioncascada = document.getElementById("descripcioncascada");



        const obtenerdescricion = () => {

            let descripcioncascadas = document.getElementById("descripcioncascada");

            let descripcion = document.getElementById("descripcion").value = descripcioncascadas.value;

            if (descripcion != "") {

                //para que el input de activo descripcion se mantena vacio
                descripcioncascadas.value = "";
            }

        }

        descripcioncascada.addEventListener('change', obtenerdescricion);



        let inputColor = document.getElementById("inputcolor");

        //esta funcion nos guarda el background color en la db
        function guardarStyle() {

            let obtenerColor = inputColor.value;


            const url = "/Reportes/ConfigStyle/background_color"

            fetch(url, {

                method: 'POST',

                body: JSON.stringify({

                    background: obtenerColor



                }),
                headers: { 'Content-Type': 'application/json' }


            })
                .then(res => res.json())
                .then(data => {



                    recuperarStyle();


                })





        }

        inputColor.addEventListener("change", guardarStyle)

        ////esta funcion nos recupera el background color en la db
        //const recuperarStyle = () => {

        //    const url = "/Reportes/RecuperarStyle"
        //    fetch(url)
        //        .then(res => res.json())
        //        .then(data => {


        //            let area_averias = document.getElementById("area_averias");
        //            area_averias.style.backgroundColor = `${data.background}`;

        //            let head_table = document.getElementById("head_table");
        //            head_table.style.backgroundColor = `${data.background}`;


        //            let inputColor = document.getElementById("inputcolor");
        //            inputColor.value = `${data.background}`;
        //        })


        //}




        const btn_nuevoregistro = document.getElementById("formulario");

        //funcion para limpiar todo el formulario este funcion la dispara el boton nuevo registro
        const NuevoRegistroLimpiarForm = () => {



            reutilizarenviar.style.display = "none";
            ot.style.backgroundColor = "";

            document.getElementById("enviar").value = "Agregar";

            // llamamos el metodo limpiarFiltros para que nos limpie los filtro de busqueda
            LimpiarFiltros();


            //Limpiar el color de los campos requerido si estan con el erro de vacio

            let sistemas = document.getElementById("sistemas");
            let subsistemas = document.getElementById("subsistemas");
            let estaciones = document.getElementById("estaciones");
            let ubicaciones = document.getElementById("ubicaciones");
            let descripcioncascada = document.getElementById("descripcioncascada");
            let descripcion = document.getElementById("descripcion")
            let codigooperador = document.getElementById("codigooperador");
            let fechareportes = document.getElementById("fechareporte");
            let criticidad = document.getElementById("criticidad");
            let sistema = document.getElementById("sm");
            let nombreoperador = document.getElementById("nombreoperador");

            sistemas.classList.remove("error");
            subsistemas.classList.remove("error");
            estaciones.classList.remove("error");
            ubicaciones.classList.remove("error");
            descripcioncascada.classList.remove("error");
            descripcion.classList.remove("error");
            codigooperador.classList.remove("error");
            fechareportes.classList.remove("error");
            criticidad.classList.remove("error");
            sistema.classList.remove("error");
            nombreoperador.classList.remove("error");


        }


        btn_nuevoregistro.addEventListener("reset", NuevoRegistroLimpiarForm)



    </script>
    

</body>

</html>


