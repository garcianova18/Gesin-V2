@using gesin_app.ViewModel;
@model IEnumerable<UsuariosView>

@{
    ViewData["Title"] = "Mantenimiento Usuarios";

  
}

    <div class="row">

        <div class="col-12 d-flex justify-content-center mb-5">

            <h3>Estaciones</h3>
        </div>

        <div class="col-12 d-flex justify-content-center mb-5">

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#crear_usuario">

                <div class="d-flex align-items-center">


                    <div class="px-2">agregar</div> <i class="fa-solid fa-circle-plus btn-agregar"></i>


                </div>

            </button>

            <!------------- Moda para crear una nueva estacion -------->
            <div class="modal fade" id="crear_usuario" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="staticBackdropLabel">Agregar Usuario</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form id="formUsuario" method="post">
                            <div class="modal-body">


                        <input class=" form-control" id="idusuario" disabled hidden>

                        <label class="form-label">Nombre</label>
                        <input id="nombreusuario" class="form-control" />

                         <label class="form-label">Apellido</label>
                        <input id="apellidousuario" class="form-control" />

                        <label class="form-label">Codigo</label>
                        <input  id="codigousuario" class="form-control" />

                        <label class="form-label">Usuario</label>
                        <input id="usuariousuario" class="form-control" autocomplete="off" />

                        <label class="form-label">Contraseña</label>
                        <input type="password" id="contrasenausuario" class="form-control" autocomplete="off" />

                        <label class="form-label">Perfil</label>
                        <select id="perfilusuario" class="form-control"  asp-items="ViewBag.rol">
              

                        </select>

                            </div>
                            <div class="modal-footer " id="btnfooter">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCerrarCrear">Cerrar</button>
                                <input type="submit" class="btn btn-primary" value="Agregar" id="btnenviar">
                            </div>
                        </form>
                    </div>
                </div>
            </div>


        </div>

        <div class="col col-sm-10 m-auto">




            <table class="table table-bordered">

                <thead class="table-dark">

                    <tr>

                        <th>@Html.DisplayNameFor(model => model.Nombre)</th>
                        <th>@Html.DisplayNameFor(model => model.Codigo)</th>
                        <th>@Html.DisplayNameFor(model => model.UserName)</th>
                        <th>@Html.DisplayNameFor(model => model.IdRolNavigationNombre)</th>
                        <th>Operaciones</th>



                    </tr>


                </thead>

                <tbody id="pintardata">

                    <!--Aqi se va a cargar la data de manera asincrono-->

                </tbody>



            </table>




        </div>


    </div>


    <!------------------------Modal para editar una Usuario ---------------------------->

    <div class="modal fade" id="editarUsuario" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Editar Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="formUsuarioEditar" method="post">
                    <div class="modal-body">

                        <input class=" form-control" id="idusuarioEditar" disabled hidden>

                        <label class="form-label">Nombre</label>
                        <input id="nombreusuarioEditar" class="form-control" />

                         <label class="form-label">Apellido</label>
                        <input id="apellidousuarioEditar" class="form-control" />

                        <label class="form-label">Codigo</label>
                        <input id="codigousuarioEditar" class="form-control" />

                        <label class="form-label">Usuario</label>
                        <input id="usuariousuarioEditar" class="form-control" />

                        <label class="form-label">Contraseña</label>
                        <input type="password" id="contrasenausuarioEditar" class="form-control" />

                        <label class="form-label">Perfil</label>
                        <select id="perfilusuarioEditar" class="form-control"  asp-items="ViewBag.rol">
              

                        </select>

                        

                    </div>
                    <div class="modal-footer " id="btnfooter">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCerrarEditar">Cerrar</button>
                        <input type="submit" class="btn btn-primary" value="Actualizar" id="btnenviar">
                    </div>
                </form>
            </div>
        </div>
    </div>












@section Scripts{

    <script>



        window.onload = function () {

            pintardara();

        }




        //------- crear Usuarios asincrono-----------

        const formUsuario = document.getElementById("formUsuario");

        function CrearUsuario(e) {


            e.preventDefault();



                  const idusuario =  document.getElementById("idusuario").value;
                  const nombre  =  document.getElementById("nombreusuario").value;
                  const apellido = document.getElementById("apellidousuario").value;
                  const codigo =  document.getElementById("codigousuario").value;
                  const usuario =  document.getElementById("usuariousuario").value;
                  const perfil =   document.getElementById("perfilusuario").value;
                  const contrasena =  document.getElementById("contrasenausuario").value;



            const url = "/Usuarios/CrearEditarUsuarios/usuario";

            fetch(url, {

                method: 'POST',
                body: JSON.stringify({

                   id:Number(idusuario),
                   nombre: nombre,
                   apellido: apellido,
                   codigo: Number(codigo),
                   userName:usuario,
                   Password:contrasena,
                   idRol : Number( perfil)


                }),
                headers: {
                    'Content-Type': 'application/json'
                }



            })
                .then(res => res.json())
                .then(data => {

                        if (data == 3) {

                            Swal.fire({

                            icon: 'warning',
                            title:'El nombre de usuario ya existe',
                              text: 'Intente con otro',

                            })

                        }
                 
                       else if (data == 1) {




                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Se ha agregado correctamente',
                                showConfirmButton: false,
                                timer: 2000
                            })
                            pintardara();

                            document.getElementById("btnCerrarCrear").click();
                          
                            formestaciones.reset();

                          

                        }


                        else {


                            Swal.fire({
                                icon: 'warning',
                                title: 'Advertencia...',
                                text: 'Todos los campos son obligatorio',
                                //footer: '<a href="">Why do I have this issue?</a>'
                            })

                        }

                   



                })

        }

        formUsuario.addEventListener("submit", CrearUsuario);




        //------------ editar Usuarios asincrono--------------

        const formUsuarioEditar = document.getElementById("formUsuarioEditar");


        function editarusuario(e) {


            e.preventDefault();


                  const idusuario =  document.getElementById("idusuarioEditar").value;
                  const nombre  =  document.getElementById("nombreusuarioEditar").value;
                  const apellido = document.getElementById("apellidousuarioEditar").value;
                  const codigo =  document.getElementById("codigousuarioEditar").value;
                  const usuario =  document.getElementById("usuariousuarioEditar").value;
                  const perfil =   document.getElementById("perfilusuarioEditar").value;
                  const contrasena =  document.getElementById("contrasenausuarioEditar").value;

            const url = "/Usuarios/CrearEditarUsuarios/usuario";

            fetch(url, {

                method: 'POST',
                body: JSON.stringify({

                   id:Number(idusuario),
                   nombre: nombre,
                   apellido: apellido,
                   codigo: Number(codigo),
                   userName:usuario,
                   Password:contrasena,
                   idRol : Number( perfil)


                }),
                headers: {
                    'Content-Type': 'application/json'
                }



            })
                .then(res => res.json())
                .then(data => {

                    if (data == 3) {


                        Swal.fire({

                            icon: 'warning',
                            title: 'El nombre de usuario ya existe',
                            text: 'Intente con otro',

                        })
                    }


                    else if (data == 2) {




                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Se ha actualizado correctamente',
                            showConfirmButton: false,
                            timer: 2000
                        })
                        pintardara();
                        document.getElementById("btnCerrarEditar").click();
                        formEstacionesEditar.reset();
                       

                    }

                    else if (data == 4) {


                        Swal.fire({
                            icon: 'warning',
                            title: 'Advertencia...',
                            text: 'Todos los campos son obligatorio ',
                            //footer: '<a href="">Why do I have this issue?</a>'
                        })


                    }

                    else {


                        Swal.fire({
                            icon: 'error',
                            title: 'Error...',
                            text: 'Error 404 recurso no encontrado',
                            //footer: '<a href="">Why do I have this issue?</a>'
                        })

                    }





                })

        }

        formUsuarioEditar.addEventListener("submit", editarusuario)


        //--------Listar Usuarios asincrono----------------------
        function pintardara() {

            const url = "/Usuarios/ListarUsuarios";

            fetch(url)
                .then(res => res.json())
                .then(data => {

                    const pintardata = document.getElementById("pintardata");
                    let filatabla = "";

                   data.map((datos)=>{


                        filatabla += `

                                <tr>

                                <td>${datos.nombreCompleto}</td>
                                <td>${datos.codigo}</td>
                                <td>${datos.userName}</td>
                                <td>${datos.idRolNavigationNombre}</td>
                                <td class="d-flex justify-content-around">



                                    <!-- Button trigger modal -->

                                    <button onclick="EditarUsuario(${datos.id})" type="button" class="btn btn-sm btn-success " data-bs-toggle="modal" data-bs-target="#editarUsuario">

                                        <div class="d-flex align-items-center">

                                            <i class="fa-solid fa-pen-to-square px-2"></i>

                                        </div>

                                    </button>

                                    <button onclick="EliminarUsuario(${datos.id})" type="button" class="btn btn-sm btn-danger ">

                                        <div class="d-flex align-items-center">

                                                <i class="fas fa-regular fa-trash px-2"></i>

                                        </div>

                                    </button>




                                    </td>



                                </tr>




                                    `




                   })

                    pintardata.innerHTML = filatabla;


                })



        }

        //------Cargar la data para llenar el formulario a ediar asincrono -----------//
        function EditarUsuario(idUsuario) {


            const url = "Usuarios/buscarUsuarios/?id=" + idUsuario;

            fetch(url)
                .then(res => res.json())
                .then(data => {

                    

                    document.getElementById("idusuarioEditar").value = data.id;
                    document.getElementById("nombreusuarioEditar").value = data.nombre;
                    document.getElementById("apellidousuarioEditar").value = data.apellido;
                    document.getElementById("codigousuarioEditar").value = data.codigo;
                    document.getElementById("usuariousuarioEditar").value = data.userName;
                    document.getElementById("contrasenausuarioEditar").value = data.password;
                    document.getElementById("perfilusuarioEditar").value = data.idRol;
                    
                })


        }


        //---------Elimiar una Usuarios asincrono---------------------//

        function EliminarUsuario(idUsuario) {

            Swal.fire({
                title: 'Estas seguro?',
                text: "No podrás revertir esto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, eliminar!'

            }).then((result) => {

                if (result.isConfirmed) {


                    const url = "/Usuarios/EliminarUsuarios/?id=" + idUsuario;

                    fetch(url)
                        .then(res => res.json())
                        .then(data => {
                           
                            if (data == 1) {
                              


                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: 'Se ha eliminado correctamente',
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                                pintardara();
                            }

                            else if (data == 2) {


                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error...',
                                    text: 'la estacion no puede ser eliminada porque existen reportes con ella',

                                })

                                pintardara();
                            }
                            else {

                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error...',
                                    text: 'Error 404 recurso no encontrado',

                                })

                            }



                        })

                }
            })

        }


    </script>

}
